
# Caminho para o Python (ajuste conforme necess√°rio)
PYTHON=python

.PHONY: backup list restore restore-id manual-prune check help

.DEFAULT_GOAL := help

## Executa o backup com base nas vari√°veis do .env
backup:
	@echo "üöÄ Executando backup com Restic..."
	$(PYTHON) restic_backup.py

## Lista todos os snapshots no reposit√≥rio
list:
	@echo "üìÇ Listando snapshots dispon√≠veis..."
	$(PYTHON) list_snapshots.py

## Restaura o snapshot mais recente (default = latest)
restore:
	@echo "‚ôªÔ∏è Restaurando o √∫ltimo snapshot..."
	$(PYTHON) restore_snapshot.py

## Restaura snapshot espec√≠fico (ex: make restore-id ID=abc123)
restore-id:
ifndef ID
	$(error ‚ö†Ô∏è  Voc√™ precisa passar o ID do snapshot: make restore-id ID=abc123)
endif
	@echo "‚ôªÔ∏è Restaurando snapshot ID=$(ID)..."
	$(PYTHON) restore_snapshot.py $(ID)

## Aplica reten√ß√£o manual (caso tenha desativado no .env)
manual-prune:
	@echo "üßπ Executando reten√ß√£o manual com forget/prune..."
	restic -r $${RESTIC_REPOSITORY} forget \
		--keep-daily $${RETENTION_KEEP_DAILY:-7} \
		--keep-weekly $${RETENTION_KEEP_WEEKLY:-4} \
		--keep-monthly $${RETENTION_KEEP_MONTHLY:-6} \
		--prune

## Verifica se Restic est√° instalado, vari√°veis est√£o corretas e reposit√≥rio √© acess√≠vel
check:
	@echo "üîç Executando verifica√ß√£o da configura√ß√£o Restic..."
	$(PYTHON) check_restic_access.py

## Mostra ajuda com todos os comandos dispon√≠veis
help:
	@echo "üõ†Ô∏è Comandos dispon√≠veis:"
	@echo "  make backup              Executa backup com ou sem reten√ß√£o"
	@echo "  make list                Lista snapshots existentes no reposit√≥rio"
	@echo "  make restore             Restaura o √∫ltimo snapshot (latest)"
	@echo "  make restore-id ID=xxx   Restaura um snapshot espec√≠fico por ID"
	@echo "  make manual-prune        Aplica reten√ß√£o manual (caso backup pule prune)"
	@echo "  make check               Valida PATH, .env e acesso ao reposit√≥rio Restic"
	@echo "  make help                Exibe esta ajuda"
